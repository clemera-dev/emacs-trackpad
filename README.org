See [[https://www.with-emacs-com/posts/a-keyboard-with-thumb-modifiers-and-Emacs-cursor-joystick/][here]] for the corresponding blog post. See also my old way of doing
it [[https://www.reddit.com/r/emacs/comments/4v5tfy/my_new_favourite_keyboard_hack_use_the_trackpoint/][here]]

* Dependencies

Install library for pseudo keyboard

#+BEGIN_SRC sh
sudo apt install python3-evdev
#+END_SRC

* Trackpoint setup

Clone repository and cd to it. Make trackpoint always available as
/dev/trackpoint and configure speed and sensitivity (you might want to
adjust those values in the rules file.

#+BEGIN_SRC sh
cp conf/*trackpoint*rules /etc/udev/rules.d/
#+END_SRC

Load the uinput module, for the fake keyboard events.
#+BEGIN_SRC sh
cp conf/uinput.conf /etc/modules-load.d/
#+END_SRC

Add remapping script.

#+BEGIN_SRC sh
sudo cp scripts/init_trackpoint /usr/local/bin/init_trackpoint
sudo chmod u+x /usr/local/bin/init_trackpoint
#+END_SRC

Create systemd unit at /etc/systemd/system/trackpoint_remap.service to
start the above skript on boot. /dev/trackpoint translates to dev-trackpoint.device.

#+BEGIN_SRC sh
[Unit]
BindsTo=dev-trackpoint.device
After=dev-trackpoint.device

[Service]
Type=simple
ExecStart=/usr/local/bin/init_trackpoint

[Install]
WantedBy=multi-user.target
#+END_SRC

Afterwards enable the service and start it.

#+BEGIN_SRC sh
sudo systemctl enable trackpoint_remap.service
sudo systemctl start trackpoint_remap.service
#+END_SRC


Add the following to your ~/.profile to disable mouse pointer
functionality of the trackpoint:
#+BEGIN_SRC sh
xinput disable "TPPS/2 IBM TrackPoint"
#+END_SRC


Add the following elisp snippet to improve trackpoint movement (does
not effect C-f/b only arrow-key/trackpoint):
#+BEGIN_SRC elisp
(define-advice right-char (:before-until (&rest args) stay-in-line)
  (eolp))

(define-advice left-char (:before-until (&rest args) stay-in-line)
  (bolp))
#+END_SRC


To get sticky key functionality you can use

#+BEGIN_SRC elisp
sudo apt install xkbset
xkbset sticky -twokey -latchlock
xkbset exp 1 =accessx =sticky =twokey =latchlock
# for more see also .xmodmap/.xbindkeysrc in conf dir
# and WM.org for using exwm
#sudo apt install xvkbd
#sudo apt install xbindkeys
#+END_SRC
* Enable Hyper key

From [[https://github.com/logicbomb/linux-config][here]]:

For some reason Ubuntu treats the Hyper key the same as the Super key, they
are both assigned to Mod3. Further complicating the issue Gnome doesn't source
.xinit on startup so it's difficult to run xmodmap when a desktop session
starts. The best way I found is to modify the keyboard codes used in the X
session by modifying the xkb configuration.

NOTE Make a copy fo the file to be modified:

#+begin_src sh
sudo cp /usr/share/x11/xkb/symbols/pc /usr/share/x11/xkb/symbols/pc.ORIG
#+end_src

We are going to change the modifier of the Super key from Mod3 to Mod4, this
leaves the Hyper assigned to Mod4 and the OS can disambiguate the 2 keys.

Open the file /usr/share/x11/xkb/symbols/pc and find all references to the
SUPER_L and SUPER_R keys being assigned to Mod4 and change it to Mod3:

Line 39: modifier_map Mod4 { Super_L, Super_R }; -> modifier_map Mod3 { Super_L, Super_R };

Line 53: modifier_map Mod4 { <SUPR> }; -> modifier_map Mod3 { <SUPR> };

NOTE The drawback to this method is that if an update or program makes a
change to the keyboard configuration file, changes are lost and need to be
reapplied.

* Save and restore gnome keys

#+begin_src sh
dconf dump /org/gnome/desktop/wm/keybindings/ > keybindings.dconf
dconf dump /org/gnome/settings-daemon/plugins/media-keys/ > mkeybindings.dconf
#+end_src

#+begin_src sh
dconf load /org/gnome/desktop/wm/keybindings/ < keybindings.dconf
dconf load /org/gnome/settings-daemon/plugins/media-keys/ < mkeybindings.dconf
#+end_src
* Firefox key setup

Once the hyper key is enabled we can set it as Control replacement in Firefox
in =about:config= by setting mapping it to its key [[https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode][code]]:

#+begin_src sh
# use 18 for alt
ui.key.accelKey > 91
#+end_src

Do the same for thunderbird (Preferences > Advanced > Congig Editor).

In addition to that enable Emacs keybindings for dev tools

#+begin_src sh
devtools.editor.keymap > emacs
#+end_src

Now Emacs gnome key bindings (C-n/p) will work in firefox, too. To open a
new tab use H-t etc.
